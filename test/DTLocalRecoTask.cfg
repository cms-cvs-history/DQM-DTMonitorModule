process DTLocalRecoTask = {    

	#Mapping
	es_source mapping = PoolDBESSource { VPSet toGet = {
                                      {string record = "DTReadOutMappingRcd" 
                                       string tag = "mb_map"}
                                     }
		    		     bool loadAll = true
				     string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_070/commissioning/wheel2/mb3_10.db"
				     untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_070/commissioning/wheel2/mb3Catalog.xml"
			             string timetype = "runnumber" 
				     untracked uint32 authenticationMethod = 0
				     untracked uint32 messagelevel = 0
				   }

	# Event Formatter
	source = DaqSource{ string reader = "DTROS8FileReader"
	   	untracked int32 maxEvents = 1000
			PSet pset = {  string fileName ="/afs/cern.ch/cms/Physics/muon/CMSSW/DT/data/mb3_c12_3089" } 
	}
	
	# Data Unpacker
	module dtunpacker = DTUnpackingModule{ 
		string dataType = "ROS8" }


	
	include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
	include "Geometry/DTGeometry/data/dtGeometry.cfi"

	
	# TTrig from DB
	es_source ttrig = PoolDBESSource {  VPSet toGet = {
                                    {string record = "DTTtrigRcd" 
                                     string tag = "commissioning_tTrig"
                                     } }
		    		     bool loadAll = true
                                     string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_070/tTrig/commissioningtTrig.db"
                                     untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_070/tTrig/commissioningtTrigcatalog.xml"
			             string timetype = "runnumber" 
				     untracked uint32 authenticationMethod = 0		
                                     untracked uint32 messagelevel = 0
				    }


	# T0 from DB
	es_source t0 = PoolDBESSource {  VPSet toGet = {
                                    {string record = "DTT0Rcd" 
                                     string tag = "commissioning_t0"
                                     } }
		    		     bool loadAll = true
                                     string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_070/t0/t0_W+2+1.db"
                                     untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_070/t0/t0_W+2+1catalog.xml"
			             string timetype = "runnumber" 
				     untracked uint32 authenticationMethod = 0		
                                     untracked uint32 messagelevel = 0
				    }


	# The module for 1D DT RecHit building
	include "RecoLocalMuon/DTRecHit/data/DTRecHit1DProducer_LinearDrift_CosmicData.cfi"

	## _Vdrift2D_ ##
	include "RecoLocalMuon/DTSegment/data/DTSegment2DProducer_CombPatternReco2D_LinearDrift_CosmicData.cfi"

	## _4DAlgo ##
	include "RecoLocalMuon/DTSegment/data/DTSegment4DProducer_CombPatternReco4D_LinearDrift_CosmicData.cfi"







	# DT Digi DQM
	module dtLocalRecoMonitor = DTLocalRecoTask {
	}
	
	path p = {dtunpacker, DTRecHit1DProducer, DTSegment2DProducer, DTSegment4DProducer, dtLocalRecoMonitor}	


	#DQM technicalities
	service = DaqMonitorROOTBackEnd{ }
	
	service = MonitorDaemon{
	  # if true, will automatically start DQM thread in background
	  # (default: false)
	  untracked bool AutoInstantiate = true
	
	  # if >=0, upon a connection problem, the source will automatically 
	  # attempt to reconnect with a time delay (secs) specified here 
	  # (default: 5)
	  untracked int32 reconnect_delay = 5
	
	  # collector hostname
	  # (default: localhost)
	  untracked string DestinationAddress = "localhost"
	
	  # port for communicating with collector
	  # (default: 9090)
	  untracked int32 SendPort = 9090
	
	  # monitoring period in ms (i.e. how often monitoring elements 
	  # are shipped to the collector
	  # (default: 1000)
	  untracked int32 UpdateDelay = 1000
	
	  # name of DQM source
	  # (default: DQMSource)
	  untracked string NameAsSource = "FU0"
	}

}

